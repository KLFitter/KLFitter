diff -ur BAT-0.9.4.1-orig/BAT/BCMath.h BAT-0.9.4.1-fixed/BAT/BCMath.h
--- BAT-0.9.4.1-orig/BAT/BCMath.h	2014-10-10 17:11:42.000000000 +0200
+++ BAT-0.9.4.1-fixed/BAT/BCMath.h	2019-07-04 12:57:01.455522182 +0200
@@ -215,7 +215,7 @@
 	 * @return R-value
 	 */
 	double Rvalue(const std::vector<double> & chain_means, const std::vector<double> & chain_variances,
-                  const unsigned & chain_length, const bool & strict = true) throw (std::invalid_argument, std::domain_error);
+                  const unsigned & chain_length, const bool & strict = true);
 
    /** \name p value methods */
    /** @{ */
@@ -228,7 +228,7 @@
 	 * @param nobservations The number of data points.
 	 * @return corrected p value
 	 */
-	double CorrectPValue(const double & pvalue, const unsigned & npar, const unsigned & nobservations) throw (std::domain_error);
+	double CorrectPValue(const double & pvalue, const unsigned & npar, const unsigned & nobservations);
 
 	/**
 	 * Calculate the p value using fast MCMC for a histogram and the likelihood as test statistic.
@@ -241,7 +241,7 @@
 	 * @return The p value
 	 */
 	double FastPValue(const std::vector<unsigned> & observed, const std::vector<double> & expected,
-	                  unsigned nIterations = 1e5, unsigned seed = 0) throw (std::invalid_argument);
+	                  unsigned nIterations = 1e5, unsigned seed = 0);
 
 	/** @} */
 }
diff -ur BAT-0.9.4.1-orig/src/BCMath.cxx BAT-0.9.4.1-fixed/src/BCMath.cxx
--- BAT-0.9.4.1-orig/src/BCMath.cxx	2014-10-10 17:11:42.000000000 +0200
+++ BAT-0.9.4.1-fixed/src/BCMath.cxx	2019-07-04 12:57:30.955166392 +0200
@@ -549,7 +549,7 @@
 
 // ---------------------------------------------------------
 double Rvalue(const std::vector<double> & chain_means, const std::vector<double> & chain_variances,
-              const unsigned & chain_length, const bool & strict)  throw (std::invalid_argument, std::domain_error)
+              const unsigned & chain_length, const bool & strict)
 {
    if (chain_means.size() != chain_variances.size())
       throw std::invalid_argument("BCMath::RValue: chain means and chain variances are not aligned!");
@@ -662,7 +662,7 @@
 }
 
 // ---------------------------------------------------------
-double CorrectPValue(const double & pvalue, const unsigned & npar, const unsigned & nobservations) throw (std::domain_error)
+double CorrectPValue(const double & pvalue, const unsigned & npar, const unsigned & nobservations)
 {
    // avoid pathologies
    if (pvalue < 0 or pvalue > 1)
@@ -688,7 +688,7 @@
 
 // ---------------------------------------------------------
 double FastPValue(const std::vector<unsigned> & observed, const std::vector<double> & expected,
-                  unsigned nIterations, unsigned seed) throw (std::invalid_argument)
+                  unsigned nIterations, unsigned seed)
 {
    size_t nbins = observed.size();
    if (nbins != expected.size())
