# Copyright (c) 2009--2021, the KLFitter developer team
#
# This file is part of KLFitter.
#
# KLFitter is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# KLFitter is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with KLFitter. If not, see <http://www.gnu.org/licenses/>.

language: cpp
services: docker
os: linux
dist: xenial

# Add the doxygen package from apt. Doxygen is needed to automatically build and
# deploy the reference guide online to https://KLFitter.github.io.
addons:
  apt:
    packages:
      - doxygen


# Set the docker image used for all following steps: this is a custom image with
# a KLFitter build environment that comes with ROOT 6.24.00 and BAT 0.9.4.1 as
# well as Googletest 1.10.0 installed on a vanilla ubuntu 20.04 image.
env:
  global:
    - DOCKER_IMAGE="klfitter/klfitter-buildenv:ubuntu20.04-root6.24.00-bat0.9.4.1"


# Some preparatory steps before the CI starts: authenticate against dockerhub,
# download the specified image, start an interactive container and detach. Then
# print some additional debug information to stdout.
before_install:
  - echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker pull $DOCKER_IMAGE
  - docker run -i -d --name build -v $TRAVIS_BUILD_DIR:/user/docker/src -w /user/docker/build $DOCKER_IMAGE
  - docker ps -a
  - docker exec build root --version
  - docker exec build ls -lR /user/docker


# Before the deployment step, build the doxygen documentation
# into the doc/html/ subdirectory.
before_deploy:
  - cd $TRAVIS_BUILD_DIR
  - doxygen doc/Doxyfile 2>&1


# Definiton of the actual CI job. With the KLFitter build environment in place
# in the docker image, we can go straight ahead and start configuring with
# cmake. Although KLFitter comes with configuration flags KLF_BUILD_BAT and
# KLF_BUILD_GTEST, we do not test them here anymore.
#
# TODO: re-add jobs that run in-house builds of BAT and Googletest.
jobs:
  include:
    - env:
        - KLF_CMAKE_OPTS="-DKLF_INSTALL_TESTS=TRUE -DCMAKE_BUILD_TYPE=Release"
      script:
        - docker exec build cmake ${KLF_CMAKE_OPTS} ../src
        - docker exec build make
        - docker exec build /bin/bash -c "export LD_LIBRARY_PATH=\${LD_LIBRARY_PATH}:/user/docker/build/lib && ./test-bin/unit_tests.exe"
        - docker exec build /bin/bash -c "export LD_LIBRARY_PATH=\${LD_LIBRARY_PATH}:/user/docker/build/lib && ./test-bin/test-ljets-lh.exe ../src 2>&1 |tee test-output.txt"
        - docker exec build diff -u test-output.txt ../src/tests/integration/output-ref-ljets-lh.txt
    - stage: deploy
      script: skip
      if: branch = master AND repo = KLFitter/KLFitter AND NOT type = pull_request
      deploy:
        provider: pages
        repo: KLFitter/KLFitter.github.io
        target_branch: master
        local_dir: doc/html
        token: $DOC_TOKEN
        keep_history: true
        strategy: git
        verbose: true
        allow_empty_commit: true
